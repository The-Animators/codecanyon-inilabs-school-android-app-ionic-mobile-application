{"version":3,"sources":["webpack:///./src/app/pages/payment/stripe/stripe.module.ts","webpack:///./src/app/pages/payment/stripe/stripe.page.html","webpack:///./src/app/pages/payment/stripe/stripe.page.scss","webpack:///./src/app/pages/payment/stripe/stripe.page.ts"],"names":[],"mappings":"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","file":"pages-payment-stripe-stripe-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StripePage } from './stripe.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StripePage\n  }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes),\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n  declarations: [StripePage]\n})\nexport class StripePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar class=\\\"background-color\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Stripe\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card class=\\\"welcome-card\\\">\\n    <ion-img src=\\\"/assets/stripe.png\\\"></ion-img>\\n    <div>\\n      <ion-row>\\n        <ion-col>\\n          <h4>Total Payment</h4>\\n        </ion-col>\\n        <ion-col>\\n          <h3>{{currencyIcon}}{{paymentAmount}}</h3>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n    <ion-card-content>\\n      <form novalidate [formGroup]=\\\"stripeForm\\\" (ngSubmit)=\\\"payWithStripe()\\\" >\\n      <ion-list>\\n        <ion-item>\\n          <ion-label color=\\\"primary\\\">Card Number: </ion-label>\\n          <ion-input type=\\\"text\\\" placeholder=\\\"4242424242424242\\\"\\n                     [(ngModel)]=\\\"cardNumber\\\" formControlName=\\\"cardNumber\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_messages.cardNumber\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"stripeForm.get('cardNumber').hasError(validation.type)  && (stripeForm.get('cardNumber').dirty || stripeForm.get('cardNumber').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item>\\n          <ion-label color=\\\"primary\\\" >Expiration Month: </ion-label>\\n          <ion-input type=\\\"text\\\" placeholder=\\\"12\\\"\\n                     [(ngModel)]=\\\"cardMonth\\\" formControlName=\\\"cardMonth\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validationc of validation_messages.cardMonth\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"stripeForm.get('cardMonth').hasError(validationc.type) && (stripeForm.get('cardMonth').dirty || stripeForm.get('cardMonth').touched)\\\">\\n              {{ validationc.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item>\\n          <ion-label color=\\\"primary\\\" >Expiration Year: </ion-label>\\n          <ion-input type=\\\"text\\\" placeholder=\\\"2024\\\"\\n                     [(ngModel)]=\\\"cardYear\\\" formControlName=\\\"cardYear\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_messages.cardYear\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"stripeForm.get('cardYear').hasError(validation.type)  && (stripeForm.get('cardYear').dirty || stripeForm.get('cardYear').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item>\\n          <ion-label color=\\\"primary\\\" >CVV: </ion-label>\\n          <ion-input type=\\\"text\\\" placeholder=\\\"123\\\"\\n                     [(ngModel)]=\\\"cardCVV\\\" formControlName=\\\"cardCVV\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_messages.cardCVV\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"stripeForm.get('cardCVV').hasError(validation.type)  && (stripeForm.get('cardCVV').dirty || stripeForm.get('cardCVV').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n\\n      </ion-list>\\n      <ion-button expand=\\\"full\\\" color=\\\"success\\\" type=\\\"submit\\\" [disabled]=\\\"stripeForm.invalid\\\" >Pay with Stripe</ion-button>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","module.exports = \".welcome-card ion-img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\n.card-content-md {\\n  padding-left: 0px !important;\\n  padding-right: 0px !important;\\n  padding-top: 0px !important;\\n  padding-bottom: 10px !important;\\n  font-size: 14px !important;\\n  line-height: 1.5 !important; }\\n\\nh4 {\\n  margin-top: 10px !important;\\n  margin-bottom: 0px !important; }\\n\\nh3 {\\n  margin-top: 10px !important;\\n  margin-bottom: 0px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF5bWVudC9zdHJpcGUvRDpcXHNjaG9vbEFwcFxcc2Nob29sYXBwL3NyY1xcYXBwXFxwYWdlc1xccGF5bWVudFxcc3RyaXBlXFxzdHJpcGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IsMkJBQTJCO0VBQzNCLCtCQUErQjtFQUMvQiwwQkFBMEI7RUFDMUIsMkJBQTJCLEVBQUE7O0FBRTdCO0VBQ0UsMkJBQTJCO0VBQzNCLDZCQUE2QixFQUFBOztBQUUvQjtFQUNFLDJCQUEyQjtFQUMzQiw2QkFBNkIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BheW1lbnQvc3RyaXBlL3N0cmlwZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud2VsY29tZS1jYXJkIGlvbi1pbWcge1xyXG4gIG1heC1oZWlnaHQ6IDM1dmg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLmNhcmQtY29udGVudC1tZCB7XHJcbiAgcGFkZGluZy1sZWZ0OiAwcHggIWltcG9ydGFudDtcclxuICBwYWRkaW5nLXJpZ2h0OiAwcHggIWltcG9ydGFudDtcclxuICBwYWRkaW5nLXRvcDogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZy1ib3R0b206IDEwcHggIWltcG9ydGFudDtcclxuICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDtcclxuICBsaW5lLWhlaWdodDogMS41ICFpbXBvcnRhbnQ7XHJcbn1cclxuaDR7XHJcbiAgbWFyZ2luLXRvcDogMTBweCAhaW1wb3J0YW50O1xyXG4gIG1hcmdpbi1ib3R0b206IDBweCAhaW1wb3J0YW50O1xyXG59XHJcbmgze1xyXG4gIG1hcmdpbi10b3A6IDEwcHggIWltcG9ydGFudDtcclxuICBtYXJnaW4tYm90dG9tOiAwcHggIWltcG9ydGFudDtcclxufVxyXG4iXX0= */\"","import { Component } from '@angular/core';\nimport { Stripe } from '@ionic-native/stripe/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport {Network} from '@ionic-native/network/ngx';\nimport {AlertController, LoadingController, ToastController} from '@ionic/angular';\nimport {AuthenticationService} from '../../../service/authentication/authentication.service';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AccountService} from '../../../service/account/account.service';\n\n@Component({\n  selector: 'app-stripe',\n  templateUrl: 'stripe.page.html',\n  styleUrls: ['stripe.page.scss'],\n})\nexport class StripePage {\n    stripeForm: FormGroup;\n    paymentAmount: any;\n  currency = 'USD';\n  currencyIcon = '$';\n  stripe_key: any;\n  cardDetails: any = {};\n  siteinfo: any;\n    cardNumber: string;\n    cardMonth: number;\n    cardYear: number;\n    cardCVV: string;\n    invoiceAmount: any;\n    mainInivoiceID: any;\n\n\n    constructor(\n      private stripe: Stripe,\n      private http: HttpClient,\n      private network: Network,\n      private authService: AuthenticationService,\n      private toastCtrl: ToastController,\n      public  loadingCtrl: LoadingController,\n      public  alertCtrl: AlertController,\n      private route: ActivatedRoute,\n      private router: Router,\n      public accountService: AccountService,\n    ) {\n        this.route.queryParams.subscribe(params => {\n            if (params && params.special) {\n                this.invoiceAmount = JSON.parse(params.special);\n                this.paymentAmount = params.totalAmount;\n                this.mainInivoiceID = params.mainInivoiceID;\n            }\n        });\n      this.siteInfo();\n        this.stripeForm = new FormGroup({\n            cardNumber: new FormControl('', [Validators.required, Validators.minLength(16), Validators.maxLength(16)]),\n            cardMonth: new FormControl('', [Validators.required, Validators.minLength(1), Validators.maxLength(2)]),\n            cardYear: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(4)]),\n            cardCVV: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]),\n        });\n  }\n\n    validation_messages = {\n        'cardNumber': [\n            { type: 'required', message: 'Card number is required.' },\n            { type: 'minlength', message: ' Card number must be at least 16 digit.' },\n            { type: 'maxlength', message: ' Card number cannot be more than 16 digit.' },\n        ],\n\n        'cardMonth': [\n            { type: 'required', message: 'Card month is required.' },\n            { type: 'minlength', message: ' Card month must be at least 1 digit.' },\n            { type: 'maxlength', message: ' Card month cannot be more than 2 digit.' },\n        ],\n        'cardYear': [\n            { type: 'required', message: 'Card year is required.' },\n            { type: 'minlength', message: ' Card year must be at least 4 digit.' },\n            { type: 'maxlength', message: ' Card year cannot be more than 4 digit.' },\n        ],\n        'cardCVV': [\n            { type: 'required', message: 'Card cvv is required.' },\n            { type: 'minlength', message: ' Card cvv must be at least 3 digit.' },\n            { type: 'maxlength', message: ' Card cvv cannot be more than 3 digit.' },\n        ],\n    };\n    async presentToast() {\n        const toast = await this.toastCtrl.create({\n            message: 'You are offline, please connect your wifi or 3g',\n            position: 'top',\n            duration: 2000\n        });\n        await toast.present();\n    }\n    async presentLoading() {\n\n        const loading = await this.loadingCtrl.create({\n            message: 'Please wait...',\n            spinner: 'crescent',\n        });\n        await loading.present();\n    }\n\n    async presentAlert(data) {\n        const alert = await this.alertCtrl.create({\n            header: 'Login',\n            message: data.message,\n            buttons: ['Dismiss']\n        });\n\n        await alert.present();\n    }\n\n    async dismiss() {\n        return await this.loadingCtrl.dismiss({'dismissed': true});\n    }\n    ionViewDidLoad() {\n        this.siteInfo();\n    }\n    siteInfo() {\n\n        if (this.network.type === 'none' || this.network.type === 'unknown') {\n            this.presentToast();\n        } else {\n            this.authService.getSiteInfo()\n                .then((data: any) => {\n                    console.log(data);\n                    this.siteinfo = data;\n                    this.stripe_key = data.stripe_key;\n                    if (data.currency_symbol && data.currency_code) {\n                        this.currencyIcon = data.currency_symbol;\n                        this.currency = data.currency_code;\n                    }\n                }).catch(error => {});\n        }\n    }\n  payWithStripe() {\n    this.stripe.setPublishableKey(this.stripe_key);\n\n    this.cardDetails = {\n        number: this.cardNumber,\n        expMonth: this.cardMonth,\n        expYear: this.cardYear,\n        cvc: this.cardCVV\n    };\n    console.log(this.cardDetails);\n    this.presentLoading();\n    this.stripe.createCardToken(this.cardDetails)\n        .then(token => {\n          console.log(token);\n          this.makePayment(token.id);\n        })\n        .catch(error => {\n            this.dismiss().then(r => console.log(r));\n            this.presentAlert(error);\n\n        });\n  }\n  makePayment(token) {\n      const allData = {\n          stripeToken: token,\n          invoicePaidAmount: this.invoiceAmount,\n          totalAmount: this.paymentAmount,\n          mainInivoiceID: this.mainInivoiceID,\n          paymentmethodID: 'Stripe',\n      };\n      this.accountService.getInvoicePaid(allData)\n          .then((data: any) => {\n              console.log(data);\n          });\n      this.dismiss().then(r => console.log(r));\n      // this.presentAlert('error');\n  }\n\n}\n"],"sourceRoot":""}