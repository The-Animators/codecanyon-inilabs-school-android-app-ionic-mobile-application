{"version":3,"sources":["webpack:///./src/app/pages/administrator/certificatetemplateview/certificatetemplateview.module.ts","webpack:///./src/app/pages/administrator/certificatetemplateview/certificatetemplateview.page.html","webpack:///./src/app/pages/administrator/certificatetemplateview/certificatetemplateview.page.scss","webpack:///./src/app/pages/administrator/certificatetemplateview/certificatetemplateview.page.ts"],"names":[],"mappings":"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","file":"pages-administrator-certificatetemplateview-certificatetemplateview-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CertificatetemplateviewPage } from './certificatetemplateview.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CertificatetemplateviewPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CertificatetemplateviewPage]\n})\nexport class CertificatetemplateviewPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar class=\\\"background-color\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title align=\\\"center\\\">{{language?.panel_title}} {{language?.view}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content  class=\\\"bg-image no-scroll\\\">\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event,true,certificate_templateID)\\\" *ngIf=\\\"isRefresh\\\">\\n    <ion-refresher-content\\n            pullingIcon=\\\"arrow-dropdown\\\"\\n            pullingText=\\\"Pull to refresh\\\"\\n            refreshingSpinner=\\\"circles\\\"\\n            refreshingText=\\\"Refreshing...\\\">\\n    </ion-refresher-content>\\n  </ion-refresher>\\n  <ng-container  *ngIf=\\\"certificatetemplate\\\">\\n    <ion-card class=\\\"card-bg\\\">\\n      <div class=\\\"card-class\\\">\\n        <ion-item class=\\\"p-text ion-item-css\\\">\\n          <ion-avatar style=\\\"margin-right: 10px\\\">\\n            <img src=\\\"assets/diploma.png\\\" />\\n          </ion-avatar>\\n          <ion-label>\\n            <h4>{{certificatetemplate?.top_heading_title}}</h4>\\n            <ion-text>\\n              <p>{{certificatetemplate?.name}}</p>\\n            </ion-text>\\n          </ion-label>\\n        </ion-item>\\n        <ion-card-content>\\n          <span>{{certificatetemplate?.template}}</span>\\n        </ion-card-content>\\n      </div>\\n    </ion-card>\\n  </ng-container>\\n</ion-content>\\n\"","module.exports = \".card-bg {\\n  --background: #ffff !important;\\n  margin-top: 10px;\\n  border-radius: 15px; }\\n\\n.card-header {\\n  --background:#989aa2;\\n  color: black; }\\n\\n.p-text p {\\n  font-size: 13px;\\n  color: #ffffff; }\\n\\n.p-text h4 {\\n  font-size: 16px;\\n  color: #ffffff; }\\n\\n.card-class {\\n  margin: 8px; }\\n\\n.card-class .text-color-h {\\n  text-align: start;\\n  font-size: 17px;\\n  color: #000000; }\\n\\n.card-class .text-color-p {\\n  text-align: start;\\n  color: #000000;\\n  font-size: 13px;\\n  line-height: 0px; }\\n\\n.ion-item-css {\\n  --ion-background-color:#adadaffc !important; }\\n\\n.notice-img {\\n  width: 80px;\\n  height: 80px;\\n  border-radius: 50%;\\n  margin: auto;\\n  border: 4px solid rgba(255, 255, 255, 0.4);\\n  box-shadow: 0px 0px 142px -37px rgba(0, 0, 0, 0.75); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWRtaW5pc3RyYXRvci9jZXJ0aWZpY2F0ZXRlbXBsYXRldmlldy9EOlxcc2Nob29sQXBwXFxzY2hvb2xhcHAvc3JjXFxhcHBcXHBhZ2VzXFxhZG1pbmlzdHJhdG9yXFxjZXJ0aWZpY2F0ZXRlbXBsYXRldmlld1xcY2VydGlmaWNhdGV0ZW1wbGF0ZXZpZXcucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsOEJBQWE7RUFDYixnQkFBZ0I7RUFDaEIsbUJBQW1CLEVBQUE7O0FBS3JCO0VBQ0Usb0JBQWE7RUFDYixZQUFZLEVBQUE7O0FBR2Q7RUFDRSxlQUFlO0VBQ2YsY0FBYyxFQUFBOztBQUVoQjtFQUNFLGVBQWU7RUFDZixjQUFjLEVBQUE7O0FBSWhCO0VBQ0UsV0FBVyxFQUFBOztBQUViO0VBQ0UsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixjQUFjLEVBQUE7O0FBRWhCO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCxlQUFlO0VBQ2YsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsMkNBQXVCLEVBQUE7O0FBR3pCO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLDBDQUEwQztFQUcxQyxtREFBbUQsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkbWluaXN0cmF0b3IvY2VydGlmaWNhdGV0ZW1wbGF0ZXZpZXcvY2VydGlmaWNhdGV0ZW1wbGF0ZXZpZXcucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uY2FyZC1iZ3tcbiAgLS1iYWNrZ3JvdW5kOiAjZmZmZiAhaW1wb3J0YW50O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xuXG59XG5cblxuLmNhcmQtaGVhZGVye1xuICAtLWJhY2tncm91bmQ6Izk4OWFhMjtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ucC10ZXh0IHAge1xuICBmb250LXNpemU6IDEzcHg7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLnAtdGV4dCBoNCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6ICNmZmZmZmY7XG5cbn1cblxuLmNhcmQtY2xhc3Mge1xuICBtYXJnaW46IDhweDtcbn1cbi5jYXJkLWNsYXNzIC50ZXh0LWNvbG9yLWh7XG4gIHRleHQtYWxpZ246IHN0YXJ0O1xuICBmb250LXNpemU6IDE3cHg7XG4gIGNvbG9yOiAjMDAwMDAwO1xufVxuLmNhcmQtY2xhc3MgLnRleHQtY29sb3ItcCB7XG4gIHRleHQtYWxpZ246IHN0YXJ0O1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBsaW5lLWhlaWdodDogMHB4O1xufVxuXG4uaW9uLWl0ZW0tY3NzIHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjojYWRhZGFmZmMgIWltcG9ydGFudDtcbn1cblxuLm5vdGljZS1pbWcge1xuICB3aWR0aDogODBweDtcbiAgaGVpZ2h0OiA4MHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgYm9yZGVyOiA0cHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCAwcHggMTQycHggLTM3cHggcmdiYSgwLCAwLCAwLCAwLjc1KTtcbiAgLW1vei1ib3gtc2hhZG93OiAwcHggMHB4IDE0MnB4IC0zN3B4IHJnYmEoMCwgMCwgMCwgMC43NSk7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMTQycHggLTM3cHggcmdiYSgwLCAwLCAwLCAwLjc1KTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AdministratorService} from '../../../service/administrator/administrator.service';\nimport {LangandparmisionService} from '../../../service/langandparmision.service';\nimport {Network} from '@ionic-native/network/ngx';\nimport {ToastController} from '@ionic/angular';\n\n@Component({\n  selector: 'app-certificatetemplateview',\n  templateUrl: './certificatetemplateview.page.html',\n  styleUrls: ['./certificatetemplateview.page.scss'],\n})\nexport class CertificatetemplateviewPage implements OnInit {\n    certificate_templateID: any;\n     certificatetemplate: any;\n    permission: any;\n    language: any;\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private network: Network,\n        private toastCtrl: ToastController,\n        public administratorService: AdministratorService,\n        public langandpermissionService: LangandparmisionService\n    ) {\n        this.certificate_templateID = this.route.snapshot.paramMap.get('certificate_templateID');\n        this.doRefresh(false, false, this.certificate_templateID);\n    }\n\n    isRefresh = true;\n    ngOnInit() {\n\n    }\n\n    async presentToast() {\n        const toast = await this.toastCtrl.create({\n            message: 'You are offline, please connect your wifi or 3g',\n            position: 'top',\n            duration: 2000\n        });\n        await toast.present();\n    }\n\n    doRefresh(event, value, certificate_templateID) {\n        if (this.network.type === 'none' || this.network.type === 'unknown') {\n            this.presentToast();\n        }\n\n            this.administratorService.getCertificateTemplatesview(value, certificate_templateID)\n                .then((data: any) => {\n                    this.certificatetemplate = data.certificatetemplate;\n                });\n            this.langandpermissionService.getLangandPermissionCall(value, 'certificate_template')\n                .then((data: any) => {\n                    this.permission = data.permission;\n                    this.language = data.language;\n                });\n            if (event) {\n            setTimeout(() => {\n                event.target.complete();\n            }, 2000);\n        }\n    }\n}\n"],"sourceRoot":""}