{"version":3,"sources":["webpack:///./src/app/service/attendance/attendance.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA2C;AACK;AACG;AACZ;AAC2B;AAChB;AAOlD;IAEI,2BAAmB,IAAgB,EACf,OAAgB,EAChB,WAA8B,EAC/B,OAAgB,EACf,SAA0B;QAJ3B,SAAI,GAAJ,IAAI,CAAY;QACf,YAAO,GAAP,OAAO,CAAS;QAChB,gBAAW,GAAX,WAAW,CAAmB;QAC/B,YAAO,GAAP,OAAO,CAAS;QACf,cAAS,GAAT,SAAS,CAAiB;IAAG,CAAC;IAG5C,0CAAc,GAApB;;;;;4BAEoB,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BAC1C,OAAO,EAAE,gBAAgB;4BACzB,OAAO,EAAE,UAAU;yBACtB,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;;;;;KAE3B;IAGK,mCAAO,GAAb;;;;4BACW,qBAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;4BAClC,WAAW,EAAE,IAAI;yBACpB,CAAC;4BAFF,sBAAO,SAEL,EAAC;;;;KACN;IAED,0CAAc,GAAd,UAAe,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU;QAAxD,iBAqGC;QApGO,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,IAAO,UAAU,GAAG,aAAa,GAAG,OAAO,CAAC;YAC5C,IAAI,OAAO,EAAE;gBACT,IAAI,OAAO,EAAE;oBACT,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;qBACpE;yBAAM;wBACH,KAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,oBAAoB,GAAG,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;4BAC5E,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;4BACxC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACnB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,EAAE,aAAG;4BACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACjB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,CAAC,CAAC;qBACN;iBACJ;qBAAM,IAAK,OAAO,IAAI,IAAI,IAAI,UAAU,IAAI,CAAC,EAAE;oBAC5C,IAAM,iBAAe,GAAG,qBAAqB,GAAG,WAAW,CAAC;oBAC5D,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;qBACpE;yBAAM;wBACH,KAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,oBAAoB,GAAG,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;4BAC5E,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAe,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC7C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACnB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,EAAE,aAAG;4BACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACjB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,CAAC,CAAC;qBACN;iBACJ;aACJ;iBAAM;gBACH,IAAI,OAAO,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,EAAE;oBACvC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;wBAClC,IAAI,GAAG,IAAI,IAAI,EAAE;4BACb,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;6BAC5E;iCAAM;gCACK,KAAI,CAAC,cAAc,EAAE,CAAC;gCACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,oBAAoB,GAAG,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oCAC5E,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oCACxC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oCACnB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,EAAE,aAAG;oCACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oCACjB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,CAAC,CAAC;6BACN;yBACJ;6BAAM;4BACH,OAAO,CAAC,GAAG,CAAC,CAAC;yBAChB;oBACL,CAAC,EAAE,aAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC;iBACN;qBAAM,IAAI,OAAO,EAAE;oBAChB,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;wBAClC,IAAI,GAAG,IAAI,IAAI,EAAE;4BACb,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;6BAC5E;iCAAM;gCACK,KAAI,CAAC,cAAc,EAAE,CAAC;gCACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,oBAAoB,GAAG,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oCAC5E,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oCACxC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oCACnB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,EAAE,aAAG;oCACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oCACjB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,CAAC,CAAC;6BACN;yBACJ;6BAAM;4BACH,OAAO,CAAC,GAAG,CAAC,CAAC;yBAChB;oBACL,CAAC,EAAE,aAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC;iBACN;qBAAM,IAAI,OAAO,IAAI,IAAI,IAAI,UAAU,IAAI,CAAC,EAAE;oBAC3C,IAAM,iBAAe,GAAG,qBAAqB,GAAG,WAAW,CAAC;oBAC5D,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAe,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;wBACvC,IAAI,GAAG,IAAI,IAAI,EAAE;4BACb,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;6BAC5E;iCAAM;gCACK,KAAI,CAAC,cAAc,EAAE,CAAC;gCACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,oBAAoB,GAAG,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oCAC5E,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAe,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oCAC7C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oCACnB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,EAAE,aAAG;oCACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oCACjB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,CAAC,CAAC;6BACN;yBACJ;6BAAM;4BACH,OAAO,CAAC,GAAG,CAAC,CAAC;yBAChB;oBACL,CAAC,EAAE,aAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC;iBACN;aACJ;QACL,CAAC,CAAC,CAAC;IAEX,CAAC;IAED,8CAAkB,GAAlB,UAAmB,SAAS,EAAE,OAAO,EAAE,OAAO;QAA9C,iBAwCC;QAtCG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,IAAM,eAAe,GAAG,qBAAqB,GAAG,SAAS,GAAG,OAAO,CAAC;YACpE,IAAI,OAAO,EAAE;gBACT,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;iBAC5D;qBAAM;oBACX,KAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;wBAC7F,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC7C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACnB,KAAI,CAAC,OAAO,EAAE,CAAC;oBACnB,CAAC,EAAE,aAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,KAAI,CAAC,OAAO,EAAE,CAAC;oBACnB,CAAC,CAAC,CAAC;iBACN;aACJ;iBAAM;gBACH,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBACvC,IAAI,GAAG,IAAI,IAAI,EAAE;wBACb,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;yBACpE;6BAAM;4BACH,KAAI,CAAC,cAAc,EAAE,CAAC;4BACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gCAC7F,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gCAC7C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACnB,KAAI,CAAC,OAAO,EAAE,CAAC;4BACnB,CAAC,EAAE,aAAG;gCACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCACjB,KAAI,CAAC,OAAO,EAAE,CAAC;4BACnB,CAAC,CAAC,CAAC;yBACN;qBACJ;yBAAM;wBACH,OAAO,CAAC,GAAG,CAAC,CAAC;qBAChB;gBACL,CAAC,EAAE,aAAG;oBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,2CAAe,GAAf,UAAgB,OAAO;QAAvB,iBASC;QARG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0DAAW,GAAG,iBAAiB,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBACzE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,EAAE,aAAG;gBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,2CAAe,GAAf,UAAgB,OAAO;QAAvB,iBASC;QARG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0DAAW,GAAG,4BAA4B,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBACpF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,EAAE,aAAG;gBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,0CAAc,GAAd,UAAe,OAAO,EAAE,WAAW,EAAE,UAAU;QAA/C,iBAoFC;QAnFG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,IAAO,UAAU,GAAG,aAAa,CAAC;YAClC,IAAO,iBAAiB,GAAG,oBAAoB,GAAG,WAAW,GAAG,UAAU,CAAC;YAE3E,IAAI,OAAO,EAAE;gBACT,IAAI,WAAW,IAAI,UAAU,EAAG;oBAC5B,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;qBAChE;yBAAM;wBACP,KAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;4BACjE,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC/C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACnB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,EAAE,aAAG;4BACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACjB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,CAAC,CAAC;qBACN;iBACJ;qBAAM;oBACH,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;qBAChE;yBAAM;wBACP,KAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;4BACjE,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;4BACxC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACnB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,EAAE,aAAG;4BACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACjB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,CAAC,CAAC;qBACN;iBACJ;aAEJ;iBAAM;gBACH,IAAI,WAAW,IAAI,UAAU,EAAG;oBAC5B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;wBACzC,IAAI,GAAG,IAAI,IAAI,EAAE;4BACb,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;6BACxE;iCAAM;gCACC,KAAI,CAAC,cAAc,EAAE,CAAC;gCACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oCACjE,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oCAC/C,KAAI,CAAC,OAAO,EAAE,CAAC;oCACf,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACvB,CAAC,EAAE,aAAG;oCACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oCACjB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,CAAC,CAAC;6BACN;yBAEJ;6BAAM;4BACH,OAAO,CAAC,GAAG,CAAC,CAAC;yBAChB;oBAEL,CAAC,EAAE,aAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC;iBACN;qBAAM;oBACH,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;wBAClC,IAAI,GAAG,IAAI,IAAI,EAAE;4BACb,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;6BACxE;iCAAM;gCACC,KAAI,CAAC,cAAc,EAAE,CAAC;gCACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oCACjE,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oCACxC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oCACnB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,EAAE,aAAG;oCACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oCACjB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,CAAC,CAAC;6BACN;yBAEJ;6BAAM;4BACH,OAAO,CAAC,GAAG,CAAC,CAAC;yBAChB;oBAEL,CAAC,EAAE,aAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC;iBACN;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAkB,GAAlB,UAAmB,OAAO,EAAE,SAAS;QAArC,iBAoCC;QAlCG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,IAAM,cAAc,GAAG,iBAAiB,GAAG,SAAS,CAAC;YACrD,IAAI,OAAO,EAAE;gBACT,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,GAAG,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oBAC7E,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC5C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC,EAAE,aAAG;oBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBACtC,IAAI,GAAG,IAAI,IAAI,EAAE;wBACb,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;yBACpE;6BAAM;4BACH,KAAI,CAAC,cAAc,EAAE,CAAC;4BACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,GAAG,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gCAC7E,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gCAC5C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACnB,KAAI,CAAC,OAAO,EAAE,CAAC;4BACnB,CAAC,EAAE,aAAG;gCACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCACjB,KAAI,CAAC,OAAO,EAAE,CAAC;4BACnB,CAAC,CAAC,CAAC;yBACN;qBAEJ;yBAAM;wBACH,OAAO,CAAC,GAAG,CAAC,CAAC;qBAChB;gBAEL,CAAC,EAAE,aAAG;oBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAe,GAAf,UAAgB,OAAO;QAAvB,iBASC;QARG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0DAAW,GAAG,iBAAiB,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBACzE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,EAAE,aAAG;gBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,2CAAe,GAAf,UAAgB,OAAO;QAAvB,iBASC;QARG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0DAAW,GAAG,4BAA4B,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBACpF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,EAAE,aAAG;gBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,0CAAc,GAAd,UAAe,OAAO,EAAE,WAAW,EAAE,UAAU;QAA/C,iBAoFC;QAnFG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,IAAO,UAAU,GAAG,aAAa,CAAC;YAClC,IAAO,iBAAiB,GAAG,oBAAoB,GAAG,WAAW,GAAG,UAAU,CAAC;YAE3E,IAAI,OAAO,EAAE;gBACT,IAAI,WAAW,IAAI,UAAU,EAAG;oBAC5B,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;qBAChE;yBAAM;wBACP,KAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;4BACjE,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC/C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACnB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,EAAE,aAAG;4BACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACjB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,CAAC,CAAC;qBACN;iBACJ;qBAAM;oBACH,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;qBAChE;yBAAM;wBACP,KAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;4BACjE,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;4BACxC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACnB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,EAAE,aAAG;4BACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACjB,KAAI,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,CAAC,CAAC;qBACN;iBACJ;aAEJ;iBAAM;gBACH,IAAI,WAAW,IAAI,UAAU,EAAG;oBAC5B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;wBACzC,IAAI,GAAG,IAAI,IAAI,EAAE;4BACb,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;6BACxE;iCAAM;gCACC,KAAI,CAAC,cAAc,EAAE,CAAC;gCACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oCACjE,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oCAC/C,KAAI,CAAC,OAAO,EAAE,CAAC;oCACf,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACvB,CAAC,EAAE,aAAG;oCACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oCACjB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,CAAC,CAAC;6BACN;yBAEJ;6BAAM;4BACH,OAAO,CAAC,GAAG,CAAC,CAAC;yBAChB;oBAEL,CAAC,EAAE,aAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC;iBACN;qBAAM;oBACH,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;wBAClC,IAAI,GAAG,IAAI,IAAI,EAAE;4BACb,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;6BACxE;iCAAM;gCACC,KAAI,CAAC,cAAc,EAAE,CAAC;gCACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oCACjE,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oCACxC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oCACnB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,EAAE,aAAG;oCACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oCACjB,KAAI,CAAC,OAAO,EAAE,CAAC;gCACnB,CAAC,CAAC,CAAC;6BACN;yBAEJ;6BAAM;4BACH,OAAO,CAAC,GAAG,CAAC,CAAC;yBAChB;oBAEL,CAAC,EAAE,aAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC;iBACN;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,8CAAkB,GAAlB,UAAmB,OAAO,EAAE,MAAM;QAAlC,iBAoCC;QAlCG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,IAAM,cAAc,GAAG,iBAAiB,GAAG,MAAM,CAAC;YAClD,IAAI,OAAO,EAAE;gBACT,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,GAAG,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oBAC1E,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC5C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC,EAAE,aAAG;oBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBACtC,IAAI,GAAG,IAAI,IAAI,EAAE;wBACb,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;yBACpE;6BAAM;4BACH,KAAI,CAAC,cAAc,EAAE,CAAC;4BACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0DAAW,GAAG,mBAAmB,GAAG,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gCAC1E,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gCAC5C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACnB,KAAI,CAAC,OAAO,EAAE,CAAC;4BACnB,CAAC,EAAE,aAAG;gCACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gCACjB,KAAI,CAAC,OAAO,EAAE,CAAC;4BACnB,CAAC,CAAC,CAAC;yBACN;qBAEJ;yBAAM;wBACH,OAAO,CAAC,GAAG,CAAC,CAAC;qBAChB;gBAEL,CAAC,EAAE,aAAG;oBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAe,GAAf,UAAgB,OAAO;QAAvB,iBASC;QARG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0DAAW,GAAG,iBAAiB,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBACzE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,EAAE,aAAG;gBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,2CAAe,GAAf,UAAgB,OAAO;QAAvB,iBASC;QARG,OAAO,IAAI,OAAO,CAAC,iBAAO;YACtB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0DAAW,GAAG,4BAA4B,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBACpF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,EAAE,aAAG;gBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEP,CAAC;IAreQ,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,+DAAU;YACN,sDAAO;YACH,gEAAiB;YACtB,iEAAO;YACJ,8DAAe;OANrC,iBAAiB,CAse7B;IAAD,wBAAC;CAAA;AAte6B","file":"default~pages-attendance-sattendance-sattendance-module~pages-attendance-sattendanceadd-sattendancea~c481073b.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ApiEndPoint} from '../../../config/config';\nimport {Storage} from '@ionic/storage';\nimport {AlertController, LoadingController} from '@ionic/angular';\nimport {Network} from '@ionic-native/network/ngx';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttendanceService {\n\n    constructor(public http: HttpClient,\n                private storage: Storage,\n                public  loadingCtrl: LoadingController,\n                public network: Network,\n                public  alertCtrl: AlertController) {}\n\n\n    async presentLoading() {\n\n        const loading = await this.loadingCtrl.create({\n            message: 'Please wait...',\n            spinner: 'crescent',\n        });\n        await loading.present();\n\n    }\n\n\n    async dismiss() {\n        return await this.loadingCtrl.dismiss({\n            'dismissed': true\n        });\n    }\n\n    getSattendance(classID, boolean, loginuserID, usertypeID) {\n            return new Promise(resolve => {\n                const  storageKey = 'sattendance' + classID;\n                if (boolean) {\n                    if (classID) {\n                        if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                            this.presentLoading();\n                            this.http.get(ApiEndPoint + 'sattendance/index/' + classID).subscribe((data: any) => {\n                                this.storage.set(storageKey, data.data);\n                                resolve(data.data);\n                                this.dismiss();\n                            }, err => {\n                                console.log(err);\n                                this.dismiss();\n                            });\n                        }\n                    } else if  (classID == null && usertypeID == 3) {\n                        const storeProfileKey = 'sattendance_profile' + loginuserID;\n                        if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                            this.presentLoading();\n                            this.http.get(ApiEndPoint + 'sattendance/index/' + classID).subscribe((data: any) => {\n                                this.storage.set(storeProfileKey, data.data);\n                                resolve(data.data);\n                                this.dismiss();\n                            }, err => {\n                                console.log(err);\n                                this.dismiss();\n                            });\n                        }\n                    }\n                } else {\n                    if (classID == null && usertypeID == null) {\n                        this.storage.get(storageKey).then((val) => {\n                            if (val == null) {\n                                if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                                    this.presentLoading();\n                                    this.http.get(ApiEndPoint + 'sattendance/index/' + classID).subscribe((data: any) => {\n                                        this.storage.set(storageKey, data.data);\n                                        resolve(data.data);\n                                        this.dismiss();\n                                    }, err => {\n                                        console.log(err);\n                                        this.dismiss();\n                                    });\n                                }\n                            } else {\n                                resolve(val);\n                            }\n                        }, err => {\n                            console.log(err);\n                        });\n                    } else if (classID) {\n                        this.storage.get(storageKey).then((val) => {\n                            if (val == null) {\n                                if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                                    this.presentLoading();\n                                    this.http.get(ApiEndPoint + 'sattendance/index/' + classID).subscribe((data: any) => {\n                                        this.storage.set(storageKey, data.data);\n                                        resolve(data.data);\n                                        this.dismiss();\n                                    }, err => {\n                                        console.log(err);\n                                        this.dismiss();\n                                    });\n                                }\n                            } else {\n                                resolve(val);\n                            }\n                        }, err => {\n                            console.log(err);\n                        });\n                    } else if (classID == null && usertypeID == 3) {\n                        const storeProfileKey = 'sattendance_profile' + loginuserID;\n                        this.storage.get(storeProfileKey).then((val) => {\n                            if (val == null) {\n                                if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                                    this.presentLoading();\n                                    this.http.get(ApiEndPoint + 'sattendance/index/' + classID).subscribe((data: any) => {\n                                        this.storage.set(storeProfileKey, data.data);\n                                        resolve(data.data);\n                                        this.dismiss();\n                                    }, err => {\n                                        console.log(err);\n                                        this.dismiss();\n                                    });\n                                }\n                            } else {\n                                resolve(val);\n                            }\n                        }, err => {\n                            console.log(err);\n                        });\n                    }\n                }\n            });\n\n    }\n\n    getSattendanceView(studentID, classID, boolean) {\n\n        return new Promise(resolve => {\n            const storeProfileKey = 'sattendance_profile' + studentID + classID;\n            if (boolean) {\n                if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                    this.presentLoading();\n                    this.http.get(ApiEndPoint + 'sattendance/view/' + studentID + '/' + classID).subscribe((data: any) => {\n                        this.storage.set(storeProfileKey, data.data);\n                        resolve(data.data);\n                        this.dismiss();\n                    }, err => {\n                        console.log(err);\n                        this.dismiss();\n                    });\n                }\n            } else {\n                this.storage.get(storeProfileKey).then((val) => {\n                    if (val == null) {\n                        if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                            this.presentLoading();\n                            this.http.get(ApiEndPoint + 'sattendance/view/' + studentID + '/' + classID).subscribe((data: any) => {\n                                this.storage.set(storeProfileKey, data.data);\n                                resolve(data.data);\n                                this.dismiss();\n                            }, err => {\n                                console.log(err);\n                                this.dismiss();\n                            });\n                        }\n                    } else {\n                        resolve(val);\n                    }\n                }, err => {\n                    console.log(err);\n                });\n            }\n        });\n    }\n\n\n    PostSattendance(allData) {\n        return new Promise(resolve => {\n            this.http.post(ApiEndPoint + 'sattendance/add', allData).subscribe((data: any ) => {\n                resolve(data.data);\n            }, err => {\n                console.log(err);\n            });\n        });\n\n    }\n\n    SaveSattendance(allData) {\n        return new Promise(resolve => {\n            this.http.post(ApiEndPoint + 'sattendance/saveattendance', allData).subscribe((data: any ) => {\n                resolve(data.data);\n            }, err => {\n                console.log(err);\n            });\n        });\n\n    }\n\n    getTattendance(boolean, loginuserID, usertypeID) {\n        return new Promise(resolve => {\n            const  storageKey = 'tattendance';\n            const  storageProfileKey = 'tattendanceProfile' + loginuserID + usertypeID;\n\n            if (boolean) {\n                if (loginuserID && usertypeID ) {\n                    if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                        this.presentLoading();\n                        this.http.get(ApiEndPoint + 'tattendance/index').subscribe((data: any) => {\n                            this.storage.set(storageProfileKey, data.data);\n                            resolve(data.data);\n                            this.dismiss();\n                        }, err => {\n                            console.log(err);\n                            this.dismiss();\n                        });\n                    }\n                } else {\n                    if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                        this.presentLoading();\n                        this.http.get(ApiEndPoint + 'tattendance/index').subscribe((data: any) => {\n                            this.storage.set(storageKey, data.data);\n                            resolve(data.data);\n                            this.dismiss();\n                        }, err => {\n                            console.log(err);\n                            this.dismiss();\n                        });\n                    }\n                }\n\n            } else {\n                if (loginuserID && usertypeID ) {\n                    this.storage.get(storageProfileKey).then((val) => {\n                        if (val == null) {\n                            if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                                this.presentLoading();\n                                this.http.get(ApiEndPoint + 'tattendance/index').subscribe((data: any) => {\n                                    this.storage.set(storageProfileKey, data.data);\n                                    this.dismiss();\n                                    resolve(data.data);\n                                }, err => {\n                                    console.log(err);\n                                    this.dismiss();\n                                });\n                            }\n\n                        } else {\n                            resolve(val);\n                        }\n\n                    }, err => {\n                        console.log(err);\n                    });\n                } else {\n                    this.storage.get(storageKey).then((val) => {\n                        if (val == null) {\n                            if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                                this.presentLoading();\n                                this.http.get(ApiEndPoint + 'tattendance/index').subscribe((data: any) => {\n                                    this.storage.set(storageKey, data.data);\n                                    resolve(data.data);\n                                    this.dismiss();\n                                }, err => {\n                                    console.log(err);\n                                    this.dismiss();\n                                });\n                            }\n\n                        } else {\n                            resolve(val);\n                        }\n\n                    }, err => {\n                        console.log(err);\n                    });\n                }\n            }\n        });\n    }\n\n    getTattendanceView(boolean, techearID) {\n\n        return new Promise(resolve => {\n            const storageviewKey = 'tattendanceview' + techearID;\n            if (boolean) {\n                this.http.get(ApiEndPoint + 'tattendance/view/' + techearID).subscribe((data: any ) => {\n                    this.storage.set(storageviewKey, data.data);\n                    resolve(data.data);\n                }, err => {\n                    console.log(err);\n                });\n            } else {\n                this.storage.get(storageviewKey).then((val) => {\n                    if (val == null) {\n                        if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                            this.presentLoading();\n                            this.http.get(ApiEndPoint + 'tattendance/view/' + techearID).subscribe((data: any) => {\n                                this.storage.set(storageviewKey, data.data);\n                                resolve(data.data);\n                                this.dismiss();\n                            }, err => {\n                                console.log(err);\n                                this.dismiss();\n                            });\n                        }\n\n                    } else {\n                        resolve(val);\n                    }\n\n                }, err => {\n                    console.log(err);\n                });\n            }\n        });\n    }\n\n    PostTattendance(allData) {\n        return new Promise(resolve => {\n            this.http.post(ApiEndPoint + 'tattendance/add', allData).subscribe((data: any ) => {\n                resolve(data.data);\n            }, err => {\n                console.log(err);\n            });\n        });\n\n    }\n\n    SaveTattendance(allData) {\n        return new Promise(resolve => {\n            this.http.post(ApiEndPoint + 'tattendance/saveattendance', allData).subscribe((data: any ) => {\n                resolve(data.data);\n            }, err => {\n                console.log(err);\n            });\n        });\n\n    }\n\n    getUattendance(boolean, loginuserID, usertypeID) {\n        return new Promise(resolve => {\n            const  storageKey = 'uattendance';\n            const  storageProfileKey = 'uattendanceProfile' + loginuserID + usertypeID;\n\n            if (boolean) {\n                if (loginuserID && usertypeID ) {\n                    if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                        this.presentLoading();\n                        this.http.get(ApiEndPoint + 'uattendance/index').subscribe((data: any) => {\n                            this.storage.set(storageProfileKey, data.data);\n                            resolve(data.data);\n                            this.dismiss();\n                        }, err => {\n                            console.log(err);\n                            this.dismiss();\n                        });\n                    }\n                } else {\n                    if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                        this.presentLoading();\n                        this.http.get(ApiEndPoint + 'uattendance/index').subscribe((data: any) => {\n                            this.storage.set(storageKey, data.data);\n                            resolve(data.data);\n                            this.dismiss();\n                        }, err => {\n                            console.log(err);\n                            this.dismiss();\n                        });\n                    }\n                }\n\n            } else {\n                if (loginuserID && usertypeID ) {\n                    this.storage.get(storageProfileKey).then((val) => {\n                        if (val == null) {\n                            if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                                this.presentLoading();\n                                this.http.get(ApiEndPoint + 'uattendance/index').subscribe((data: any) => {\n                                    this.storage.set(storageProfileKey, data.data);\n                                    this.dismiss();\n                                    resolve(data.data);\n                                }, err => {\n                                    console.log(err);\n                                    this.dismiss();\n                                });\n                            }\n\n                        } else {\n                            resolve(val);\n                        }\n\n                    }, err => {\n                        console.log(err);\n                    });\n                } else {\n                    this.storage.get(storageKey).then((val) => {\n                        if (val == null) {\n                            if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                                this.presentLoading();\n                                this.http.get(ApiEndPoint + 'uattendance/index').subscribe((data: any) => {\n                                    this.storage.set(storageKey, data.data);\n                                    resolve(data.data);\n                                    this.dismiss();\n                                }, err => {\n                                    console.log(err);\n                                    this.dismiss();\n                                });\n                            }\n\n                        } else {\n                            resolve(val);\n                        }\n\n                    }, err => {\n                        console.log(err);\n                    });\n                }\n            }\n        });\n    }\n\n\n    getUattendanceView(boolean, userID) {\n\n        return new Promise(resolve => {\n            const storageviewKey = 'uattendanceview' + userID;\n            if (boolean) {\n                this.http.get(ApiEndPoint + 'uattendance/view/' + userID).subscribe((data: any ) => {\n                    this.storage.set(storageviewKey, data.data);\n                    resolve(data.data);\n                }, err => {\n                    console.log(err);\n                });\n            } else {\n                this.storage.get(storageviewKey).then((val) => {\n                    if (val == null) {\n                        if (this.network.type === 'none' || this.network.type === 'unknown') {\n                        } else {\n                            this.presentLoading();\n                            this.http.get(ApiEndPoint + 'uattendance/view/' + userID).subscribe((data: any) => {\n                                this.storage.set(storageviewKey, data.data);\n                                resolve(data.data);\n                                this.dismiss();\n                            }, err => {\n                                console.log(err);\n                                this.dismiss();\n                            });\n                        }\n\n                    } else {\n                        resolve(val);\n                    }\n\n                }, err => {\n                    console.log(err);\n                });\n            }\n        });\n    }\n\n    PostUattendance(allData) {\n        return new Promise(resolve => {\n            this.http.post(ApiEndPoint + 'uattendance/add', allData).subscribe((data: any ) => {\n                resolve(data.data);\n            }, err => {\n                console.log(err);\n            });\n        });\n\n    }\n\n    SaveUattendance(allData) {\n        return new Promise(resolve => {\n            this.http.post(ApiEndPoint + 'uattendance/saveattendance', allData).subscribe((data: any ) => {\n                resolve(data.data);\n            }, err => {\n                console.log(err);\n            });\n        });\n\n    }\n}\n"],"sourceRoot":""}